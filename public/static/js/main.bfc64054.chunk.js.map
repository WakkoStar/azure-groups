{"version":3,"sources":["env/Config.js","env/Groups.js","Components/NavBar.js","Components/Welcome.js","API/GraphService.js","Components/List.js","App/App.js","index.js"],"names":["module","exports","appId","scopes","name","id","NavBar","props","src","alt","NavItem","to","className","exact","isAuthenticated","Welcome","SetIsAuth","user","onClick","authButtonMethod","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","get","getUsersfromMail","mail","select","users","filter","getIDfromUser","invitedUser","inviteUserfromMail","post","invitedUserEmailAddress","toLowerCase","inviteRedirectUrl","sendInvitationMessage","invitedUserDisplayName","slice","indexOf","invitation","affectUsertoGroup","id_group","id_user","member","deleteMember","delete","getMembersfromGroup","members","checkUserIsOwner","admin","getAdminGroups","groups_admin","groups_invite","adminGroups","map","group_admin","push","List","groups","useState","userSelected","setSelectUser","groupSelected","setGroupSelected","memberGroup","setMemberGroups","userSearch","setUserSearch","undefined","inputEmail","setInputEmail","useEffect","searchUser","filterMembers","window","msal","acquireTokenSilent","config","then","value","i","length","displayName","includes","selectGroup","addUser","new_id","new_user","alert","location","reload","inviteUser","deleteUser","groupId","ListSearch","isTaken","j","key","MemberList","list","style","backgroundColor","scope","ButtonList","group","index","width","type","placeholder","onChange","e","target","height","marginRight","disabled","App","isAuth","setUser","setAdminGroups","session","setSession","createSessionForAdmin","UserAgentApplication","auth","clientId","authority","redirectURI","cache","cacheLocation","storeAuthStateInCookie","getAccount","getUserProfile","setGroupsForAdmins","catch","err","console","log","login","loginPopup","prompt","logout","PrivateRoutes","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bfc64054.chunk.js","sourcesContent":["module.exports = {\r\n  appId: 'a597208d-3e9b-4926-bd6d-0415c98c2bc4',\r\n  scopes: [\r\n    \"User.ReadWrite.All\",\r\n    \"Directory.ReadWrite.All\",\r\n    \"User.Invite.All\",\r\n    \"GroupMember.ReadWrite.All\",\r\n    \"Group.ReadWrite.All\",\r\n    \"UserActivity.ReadWrite.CreatedByApp\"\r\n  ]\r\n};\r\n","module.exports = [\r\n  {\r\n    name : \"Habitat.gpseo\",\r\n    id : \"ee109a66-f87d-4933-8cc1-562047148e39\"\r\n  },\r\n  {\r\n    name : \"Communes.gpseo\",\r\n    id : \"325b8174-e8ad-45dd-94c1-94ee8da896f1\"\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { NavLink as RouterNavLink } from 'react-router-dom';\r\nimport { NavItem } from 'reactstrap';\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n      <header>\r\n        <nav>\r\n            <div>\r\n              <img src=\"https://upload.wikimedia.org/wikipedia/fr/8/87/Grand_paris_seine_et_oise.png\" alt=\"\"/>\r\n              <h1>Azure groups</h1>\r\n            </div>\r\n            <ul>\r\n                <NavItem>\r\n                  <RouterNavLink to=\"/\" className=\"nav-link\" exact>Connexion</RouterNavLink>\r\n                </NavItem>\r\n                {props.isAuthenticated ?\r\n                (\r\n                  <NavItem>\r\n                    <RouterNavLink to=\"/liste-utilisateur\" className=\"nav-link\" exact>Groupes</RouterNavLink>\r\n                  </NavItem>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n            </ul>\r\n        </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\n\r\nconst Welcome = (props) => {\r\n\r\n  const SetIsAuth = () => {\r\n    //S'il est authenthifié : afficher ses informations\r\n    if(props.isAuthenticated)\r\n    {\r\n      return(\r\n        <article>\r\n          <h1>{props.user.name}</h1>\r\n          <h2>Bienvenue dans votre espace AZURE GROUPS</h2>\r\n          <div>\r\n            <button onClick={props.authButtonMethod}>Se deconnecter</button>\r\n            <p>Vous êtes connecté</p>\r\n          </div>\r\n        </article>\r\n      );\r\n    }\r\n    //Sinon seuelement un bouton de connexion\r\n    return (\r\n      <article>\r\n        <div>\r\n          <button onClick={props.authButtonMethod}>Se connecter</button>\r\n          <p>Veuillez vous connecter</p>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <section id=\"Jumbotron\">\r\n      <SetIsAuth\r\n        isAuthenticated={props.isAuthenticated}\r\n        user={props.user}\r\n        authButtonMethod={props.authButtonMethod} />\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default Welcome;\r\n","var graph = require('@microsoft/microsoft-graph-client');\r\n//Initialiser le client sur Microsoft graph\r\nfunction getAuthenticatedClient(accessToken)\r\n{\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done) => {\r\n      done(null, accessToken.accessToken);\r\n    }\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\n//Recuperer le client courant\r\nexport async function getUserDetails(accessToken)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n  //Le client courant\r\n  const user = await client.api('/me').get();\r\n  return user;\r\n}\r\n\r\n\r\n\r\n/*** RECUPERER LES INFOS USERS ****/\r\n//Recuperer les users recherchés\r\nexport async function getUsersfromMail(accessToken, mail)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n  //Recupere tout les users\r\n  let users = await client.api('/users').select('id,displayName,mail').get();\r\n  //Si le mail n'est pas vide récuperer les users a partir de la saisie\r\n  if(mail !== \"\")\r\n  {\r\n    users = await client.api('/users').select('id,displayName,mail').filter('startswith(mail,\\'' + mail + '\\')').get();\r\n  }\r\n  return users;\r\n}\r\n\r\n//recuperer id de l'user sous forme de promise\r\nexport async function getIDfromUser(user)\r\n{\r\n  //id\r\n  const id = user.invitedUser.id;\r\n  return id;\r\n}\r\n\r\n//recuperer user a partir de l'id\r\nexport async function getUserfromID(accessToken ,id)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n  //get user\r\n  const user = await client.api('/users/'+id).select('id, displayName, mail').get();\r\n  return user;\r\n}\r\n\r\n\r\n\r\n/***CONTROLER LES MEMBRES **/\r\n//Créer un utilisateur\r\nexport async function inviteUserfromMail(accessToken, mail)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const invitation = await client.api('/invitations')\r\n    .post({\r\n          invitedUserEmailAddress: mail.toLowerCase(),\r\n          inviteRedirectUrl: \"https://azure-groups.herokuapp.com/\",\r\n          sendInvitationMessage: true,\r\n          invitedUserDisplayName: mail.slice(0,mail.indexOf('@')).toLowerCase()\r\n    });\r\n  return invitation;\r\n}\r\n\r\n//Affecter l'user selectionné au groupe désiré\r\nexport async function affectUsertoGroup(accessToken, id_group, id_user)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  //creer un membre\r\n  const member = client.api('/groups/'+ id_group +'/members/$ref')\r\n    .post({\r\n      '@odata.id': \"https://graph.microsoft.com/v1.0/users/\" + id_user\r\n    });\r\n\r\n  return member;\r\n}\r\n\r\n//supprimer un membre d'un groupe\r\nexport async function deleteMember(accessToken, id_group, id_user)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const user = await client.api(\"/groups/\"+id_group+\"/members/\"+id_user+\"/$ref\").delete();\r\n  return user;\r\n}\r\n\r\n\r\n\r\n/**RECUPERER LES MEMBRES **/\r\n//récuperer les membres d'un groupes\r\nexport async function getMembersfromGroup(accessToken, id_group)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n  //get members\r\n  const members = await client.api('groups/'+id_group+'/members').get();\r\n  return members;\r\n}\r\n\r\n//Vérifier s'il l'user fait partie du groupes\r\nexport async function checkUserIsMember(accessToken,id_group, id_user)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  //get user from group\r\n  const user = await client.api(\"/groups/\"+id_group+\"/members/\"+id_user+\"/$ref\").get();\r\n  return user\r\n}\r\n\r\n//Vérifier s'il l'admin fait partie du groupes\r\nexport async function checkUserIsOwner(accessToken,id_group, id_user)\r\n{\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  //get user from group\r\n  const admin = await client.api(\"/groups/\"+id_group+\"/owners/\"+id_user+\"/$ref\").get();\r\n  return admin\r\n}\r\n\r\n//Recuperer les groupes dans lequel fait partie l'admin et retourne les groupes invités\r\nexport async function getAdminGroups(accessToken, groups_admin, groups_invite)\r\n{\r\n  //get admin details\r\n  var admin = await getUserDetails(accessToken);\r\n  //l'admin fait partie des groupes\r\n  var adminGroups = [];\r\n  //Verifier pour chaque groupe que l'admin appartient aux groupes\r\n  groups_admin.map(\r\n    async(group_admin) => {\r\n      try {\r\n          await checkUserIsOwner(accessToken,group_admin.id, admin.id);\r\n          adminGroups.push(group_admin);\r\n      } catch (e) {\r\n        \r\n      }\r\n    });\r\n  \r\n  return adminGroups;\r\n}\r\n","import React,{useState, useEffect} from 'react';\r\nimport config from '../env/Config';\r\nimport {getUsersfromMail, inviteUserfromMail, getIDfromUser, affectUsertoGroup, getMembersfromGroup, deleteMember} from '../API/GraphService';\r\n\r\nconst List = (props) => {\r\n\r\n  const {groups} = props\r\n  const[userSelected, setSelectUser] = useState({})\r\n  const[groupSelected, setGroupSelected] = useState({id:\"\"})\r\n  const[memberGroup, setMemberGroups] = useState([])\r\n  const[userSearch, setUserSearch] = useState([])\r\n  const [inputEmail, setInputEmail] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    searchUser(\"\")\r\n  },[props])\r\n\r\n  const filterMembers = async(mail) => {\r\n    // Get the user's access token\r\n    const accessToken = await window.msal.acquireTokenSilent({\r\n      scopes: config.scopes\r\n    });\r\n    //Refresh group for each request\r\n    getMembersfromGroup(accessToken, groupSelected.id)\r\n    .then((members) => {\r\n      const {value} = members\r\n      //Correct null mails\r\n      for (var i = 0; i < value.length; i++) {\r\n        if(!value[i].mail) value[i].mail = value[i].displayName\r\n      }\r\n      const filterMembers = value.filter((member) => member.mail.includes(mail))\r\n      setMemberGroups(filterMembers);\r\n    })\r\n  }\r\n\r\n  const selectGroup = async(id, name) => {\r\n    setGroupSelected({id, name})\r\n    // Get the user's access token\r\n      const accessToken = await window.msal.acquireTokenSilent({\r\n        scopes: config.scopes\r\n      });\r\n\r\n    getMembersfromGroup(accessToken, id)\r\n    .then((members) => {\r\n          setMemberGroups(members.value)\r\n    })\r\n  }\r\n\r\n  const searchUser = async(mail) => {\r\n    const accessToken = await window.msal.acquireTokenSilent({\r\n      scopes: config.scopes\r\n    });\r\n\r\n    getUsersfromMail(accessToken, mail)\r\n    .then((userSearch) => {\r\n      setUserSearch(userSearch.value)\r\n    })\r\n\r\n    setInputEmail(mail)\r\n  }\r\n\r\n  const addUser = async(id, mail) => {\r\n    const accessToken = await window.msal.acquireTokenSilent({\r\n      scopes: config.scopes\r\n    })\r\n\r\n    let new_id = id;\r\n    if(new_id === '')\r\n    {\r\n      //Créer un user\r\n      const new_user = await inviteUserfromMail(accessToken, mail);\r\n      new_id = await getIDfromUser(new_user);\r\n    }\r\n    await affectUsertoGroup(accessToken, groupSelected.id, new_id);\r\n\r\n    alert(mail + \" à été ajouté au groupe \" + groupSelected.name)\r\n    window.location.reload();\r\n  }\r\n\r\n  //Handle members////\r\n  const inviteUser = async(user) => {\r\n    // Get the user's access token\r\n    const accessToken = await window.msal.acquireTokenSilent({\r\n      scopes: config.scopes\r\n    });\r\n\r\n    await inviteUserfromMail(accessToken, user.mail);\r\n    alert(\"Une invitation à été envoyée à \" + user.mail );\r\n  }\r\n\r\n  const deleteUser = async(groupId, user) =>{\r\n      const accessToken = await window.msal.acquireTokenSilent({\r\n        scopes: config.scopes\r\n      });\r\n\r\n    await deleteMember(accessToken, groupId, user.id );\r\n\r\n    alert(\"L'utilisateur \" + user.mail + \" à été supprimé \" );\r\n    window.location.reload();\r\n  }\r\n\r\n  const ListSearch = ({user, i}) => {\r\n    if(user !== null){\r\n        let isTaken = false;\r\n        //filter members already is the group\r\n        for (let j = 0; j < memberGroup.length; j++) {\r\n          if(memberGroup[j].id === user.id) isTaken = true;\r\n        }\r\n\r\n        if(!isTaken) {\r\n          return (\r\n            <li key={i}>\r\n              <p>{user.displayName}</p>\r\n              <button onClick={() => addUser(user.id,user.mail)}>Inviter</button>\r\n            </li>\r\n          )\r\n        }\r\n    }else{\r\n        if(groupSelected.id !== \"\"){\r\n            return (\r\n              <li>\r\n                <p>{inputEmail}</p>\r\n                <button onClick={() => addUser(\"\",inputEmail)}>Inviter</button>\r\n              </li>\r\n            )\r\n        }else{\r\n            return (\r\n              <li>\r\n                <p>Veuillez selectionnez un groupe</p>\r\n              </li>\r\n            )\r\n        }\r\n  }\r\n\r\n    return false\r\n  }\r\n\r\n  const MemberList = () => {\r\n    let list = []\r\n\r\n    for (var i = 0; i < memberGroup.length; i++) {\r\n      const member = memberGroup[i]\r\n      list[i] = (\r\n        <tr style={{backgroundColor: member.id === userSelected.id ? '#dee2e6' : 'transparent'}}>\r\n          <th scope=\"row\" key={i}>{i}</th>\r\n          <td>{member.displayName}</td>\r\n          <td>{member.mail}</td>\r\n          <td onClick={() => setSelectUser(member)}><button>Sélectionner</button></td>\r\n        </tr>\r\n      )\r\n    }\r\n    return list\r\n  }\r\n\r\n  const ButtonList = ({group, i}) => {\r\n          return(\r\n            <button\r\n              onClick={() => selectGroup(group.id, group.name)}\r\n              key={i}\r\n              className={groupSelected.id === group.id ? 'selected' : 'not-selected'}\r\n            >\r\n            {group.name}\r\n            </button>\r\n          )\r\n  }\r\n\r\n  return(\r\n    <section id=\"Groups\">\r\n      <article>\r\n\r\n        <div id=\"group_nav\">\r\n          {\r\n            groups.length > 0 ? (\r\n              groups.map((group, index) => {\r\n                return <ButtonList group={group} i={index}/>\r\n              })\r\n            ):(\r\n                <p>Aucun groupe</p>\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div style={{width:\"100%\"}} id=\"search\">\r\n          <h2>Rechercher un membre </h2>\r\n          {\r\n            groupSelected.id !== \"\" ?(\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher par mail\"\r\n                onChange={(e) => filterMembers(e.target.value)}\r\n              />\r\n            ) : (\r\n              <p>Veuillez sélectionnez un groupe</p>\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div id=\"table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Login</th>\r\n                <th scope=\"col\">Mail</th>\r\n                <th scope=\"col\">Modifier</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <MemberList/>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"member_nav\">\r\n          <div style={{height:'20%'}}>\r\n            <h2>Modifier un membre</h2>\r\n            <p>Sélection : <strong>{userSelected.displayName}</strong></p>\r\n            <button\r\n              onClick={() => inviteUser(userSelected)}\r\n              style={{marginRight: '0.5vw'}}\r\n              disabled={!userSelected.id}>\r\n              Réinviter\r\n            </button>\r\n            <button\r\n              onClick={() => deleteUser(groupSelected.id, userSelected)}\r\n              disabled={!userSelected.id}>\r\n              Supprimer\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{height:'80%'}}>\r\n            <div className=\"form\">\r\n              <h2>Ajouter un membre</h2>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Rechercher par mail\"\r\n                onChange={(e) => searchUser(e.target.value)}\r\n              />\r\n              <div>\r\n                <ul>\r\n                  {\r\n                    userSearch.length > 0 && memberGroup.length > 0 ? (\r\n                      userSearch.map((user, index) => {\r\n                        return <ListSearch user={user} i={index}/>\r\n                      })\r\n                    ):(\r\n                      <ListSearch user={null} i={0}/>\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { UserAgentApplication } from 'msal';\r\n\r\nimport NavBar from '../Components/NavBar';\r\nimport Welcome from '../Components/Welcome';\r\nimport List from '../Components/List';\r\n\r\nimport config from '../env/Config';\r\nimport groups from '../env/Groups';\r\n\r\nimport \"./App.sass\"\r\n\r\nimport {getAdminGroups, getUserDetails} from '../API/GraphService';\r\n\r\nconst App = () => {\r\n\r\n  const [user, setUser] = useState({isAuth: false, name: \"\"})\r\n  const [adminGroups, setAdminGroups] = useState([])\r\n  const [session, setSession] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    createSessionForAdmin()\r\n  },[])\r\n\r\n  const createSessionForAdmin = async() => {\r\n    //Créer une session pour l'admin\r\n    const session = new UserAgentApplication({\r\n          auth: {\r\n              clientId: config.appId,\r\n              authority: \"https://login.microsoftonline.com/fd87095d-65db-4894-98c3-4f76bdd06eb2\",\r\n              redirectURI: \"https://azure-groups.herokuapp.com/\"\r\n          },\r\n          cache: {\r\n              cacheLocation: \"localStorage\",\r\n              storeAuthStateInCookie: true\r\n          }\r\n      });\r\n    const admin = session.getAccount()\r\n    if(admin) await getUserProfile(session)\r\n    //save the session\r\n    setSession(session)\r\n  }\r\n\r\n  const setGroupsForAdmins = async(user) => {\r\n    // Get the user's access token\r\n      const accessToken = await window.msal.acquireTokenSilent({\r\n        scopes: config.scopes\r\n      });\r\n\r\n      getAdminGroups(accessToken, groups)\r\n      .then((adminGroups) => {\r\n        setAdminGroups(adminGroups)\r\n        setUser({isAuth: true, name: user.displayName })\r\n      })\r\n  }\r\n\r\n  const getUserProfile = async(session) => {\r\n\r\n    //Creer un access token\r\n    const accessToken = await session.acquireTokenSilent({\r\n      scopes: config.scopes,\r\n      authority : \"https://login.microsoftonline.com/fd87095d-65db-4894-98c3-4f76bdd06eb2\"\r\n    });\r\n\r\n    //S'il existe\r\n    if (accessToken) {\r\n        // On recupere les informations depuis GraphService et on modifie le state\r\n        getUserDetails(accessToken)\r\n        .then(async(user) => {\r\n          await setGroupsForAdmins(user)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  const login = async() => {\r\n    if(session){\r\n      session.loginPopup(\r\n        {\r\n          scopes: config.scopes,\r\n          prompt: \"select_account\"\r\n      })\r\n      .then(async() =>{\r\n        //On récupere ses informations\r\n        await getUserProfile(session);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  //Fonction pour se deconnecter\r\n  const logout = () => {\r\n    session.logout();\r\n  }\r\n\r\n  const PrivateRoutes = () => {\r\n    if(user.isAuth){\r\n      return (\r\n        <Route exact path=\"/liste-utilisateur\">\r\n            <List groups={adminGroups}/>\r\n        </Route>\r\n      )\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar isAuthenticated={user.isAuth}/>\r\n      <Route exact path=\"/\"\r\n        render={() =>\r\n          <Welcome\r\n            isAuthenticated={user.isAuth}\r\n            user={user}\r\n            authButtonMethod={user.isAuth ? logout : login} />\r\n        } />\r\n        <PrivateRoutes />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}